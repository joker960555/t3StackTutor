import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import type { User } from "@clerk/nextjs/dist/api";
import { type NextPage } from "next";
import Head from "next/head";
// import Link from "next/link";
import Image from "next/image";

import { api, type RouterOutputs } from "~/utils/api";

import { LoadingPage } from "~/components/loading";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);

const CrearePostWizard = () => {
  const { user } = useUser();
  if (!user || !user.username) {
    return <div />;
  }
  return (
    <div className="flex flex-col border-b border-gray-600 py-3 px-4">
      <div className="flex justify-between gap-4">
        <Image
          src={user.profileImageUrl}
          alt={`${user.username} Profile Image`}
          width={48}
          height={48}
          className="h-12 w-12 rounded-full object-cover "
        />
        <input
          className="grow bg-black py-4 outline-none"
          placeholder="What is happening?"
          type="text"
        />
      </div>
      <div className="flex items-center justify-between">
        <div
          className="flex gap-4
              "
        >
          <div className="w-12" />
          <span className="">ðŸ« ðŸ« ðŸ« ðŸ« ðŸ« </span>
        </div>
        <button className=" rounded-full border border-blue-500 bg-blue-500 px-8 py-1 transition-colors hover:bg-blue-600">
          Tweet
        </button>
      </div>
    </div>
  );
};

type postWithUserType = RouterOutputs["posts"]["getAll"][number];
const CreatePostView = (props: postWithUserType) => {
  const { username, id, profileImageUrl, createdAt, content, authorId } = props;
  return (
    <div className="flex items-center gap-4 border-b border-gray-600 py-3 px-4 text-sm">
      <Image
        src={profileImageUrl}
        alt={`${username}'s profile image`}
        width={48}
        height={48}
        className="h-12 w-12 self-start justify-self-start rounded-full object-cover "
      />
      <div className="flex flex-col gap-1">
        <div className="flex gap-1">
          <span className=" font-medium">{username}</span>
          <span className=" font-normal text-gray-500">Â·</span>
          <span className=" font-normal text-gray-500">
            {dayjs(createdAt).fromNow()}
          </span>
        </div>
        <div>
          ðŸ« ðŸ« ðŸ« ðŸ« ðŸ« {content}Lorem ipsum dolor sit amet consectetur, adipisicing
          elit. Quasi dignissimos nisi veritatis odio saepe doloribus similique
          dolor obcaecati vel quae, quibusdam earum, exercitationem cumque nobis
          illo provident praesentium at! Hic.
        </div>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data: posts, isLoading: postsLoading } = api.posts.getAll.useQuery();
  if (postsLoading) {
    return <LoadingPage />;
  }
  if (!posts) {
    return <div />;
  }

  return (
    <>
      {posts.map((post) => {
        return <CreatePostView {...post} key={post.id} />;
      })}
    </>
  );
};

const Home: NextPage = () => {
  const { user, isSignedIn, isLoaded: userLoaded } = useUser();
  api.posts.getAll.useQuery();
  if (!userLoaded || !user) {
    return <div />;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-full">
        <div>
          {!isSignedIn && <SignInButton mode="modal" />}
          {!!isSignedIn && <SignOutButton />}
        </div>

        <div className="mx-auto flex w-1/2 flex-col border-x border-t border-gray-600">
          <CrearePostWizard />
          <Feed />
        </div>
        <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
      </main>
    </>
  );
};

export default Home;
