import { type NextPage } from "next";
import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Image from "next/image";
import Link from "next/link";
// import { z, type ZodObject } from "zod";
// import { useForm, SubmitHandler } from "react-hook-form";
// import { zodResolver } from "@hookform/resolvers/zod";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Head from "next/head";
import { api, type RouterOutputs } from "~/utils/api";
import { LoadingPage } from "~/components/loading";
// import { type AppRouter } from "~/server/api/root";
import { PostForm } from "~/components/createPostForm/CreatePostForm";
import { CreatePostView } from "~/components/createPostView/CreatePostView";

dayjs.extend(relativeTime);
// const postContentSchema = z.object({ content: z.string().min(1).max(255) });

type postWithUserType = RouterOutputs["posts"]["getAll"][number];
// const CreatePostView = (props: postWithUserType) => {
//   const { username, id, profileImageUrl, createdAt, content, authorId } = props;

//   return (
//     <div className="flex items-center gap-4 border-b border-gray-600 py-3 px-4 text-sm">
//       <div className="self-start justify-self-start ">
//         <Link href={`${username}`} className="block h-12 w-12 ">
//           <Image
//             src={profileImageUrl}
//             alt={`${username}'s profile image`}
//             width={48}
//             height={48}
//             className="rounded-full object-cover transition-all hover:opacity-70"
//           />
//         </Link>
//       </div>
//       <div className="flex flex-col gap-1">
//         <div className="flex gap-1">
//           <Link href={`${username}`}>
//             <span className=" font-medium">{username}</span>
//           </Link>
//           <Link className="flex gap-1" href={`${username}/status/${id}`}>
//             <span className=" font-normal text-gray-500">Â·</span>
//             <span className=" font-normal text-gray-500 hover:underline hover:decoration-1">
//               {dayjs(createdAt).fromNow()}
//             </span>
//           </Link>
//         </div>
//         <Link href={`${username}/status/${id}`}>
//           <div>
//             ðŸ« ðŸ« ðŸ« ðŸ« ðŸ« {content}Lorem ipsum dolor sit amet consectetur, adipisicing
//             elit. Quasi dignissimos nisi veritatis odio saepe doloribus
//             similique dolor obcaecati vel quae, quibusdam earum, exercitationem
//             cumque nobis illo provident praesentium at! Hic.
//           </div>
//         </Link>
//       </div>
//     </div>
//   );
// };

const Feed = () => {
  const { data: posts, isLoading: postsLoading } = api.posts.getAll.useQuery();
  if (postsLoading) {
    return <LoadingPage />;
  }
  if (!posts) {
    return <div />;
  }

  return (
    <>
      {posts.map((post) => {
        return <CreatePostView {...post} key={post.id} />;
      })}
    </>
  );
};

const Home: NextPage = () => {
  const { user, isSignedIn, isLoaded: userLoaded } = useUser();
  api.posts.getAll.useQuery();
  if (!userLoaded) {
    return <div />;
  }

  return (
    <>
      {/* <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head> */}
      {/* <main className="w-full"> */}
      {/* <div>
        {!isSignedIn && <SignInButton mode="modal" />}
        {!!isSignedIn && <SignOutButton />}
      </div> */}

      {/* <div className="mx-auto flex w-full flex-col border-x border-t border-gray-600 sm:w-1/2"> */}
      {/* <CrearePostWizard /> */}
      <PostForm />
      <Feed />
      {/* </div> */}
      {/* <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" /> */}
      {/* </main> */}
    </>
  );
};

export default Home;
